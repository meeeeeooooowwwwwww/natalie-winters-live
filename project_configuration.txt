NATALIE WINTERS LIVE - PROJECT CONFIGURATION
===========================================

1. VIDEO PAGE COMPONENT
----------------------
File: ./src/app/video/[id]/page.tsx
----------------------------------
'use client'

import { Video } from '@/types/video'
import { formatDate } from '@/utils/videoUtils'

export default function VideoPage({ params }: { params: { id: string } }) {
  const decodedId = decodeURIComponent(params.id)
  const currentDate = new Date()

  return (
    <div className="min-h-screen py-16">
      <div className="max-w-4xl mx-auto px-4">
        <div className="aspect-video w-full mb-8">
          <iframe
            src={`https://rumble.com/embed/${decodedId}`}
            className="w-full h-full rounded-lg"
            allowFullScreen
          />
        </div>

        <h1 className="text-3xl font-bold mb-4">Video {decodedId}</h1>
        
        <div className="flex items-center gap-4 text-sm text-gray-400 mb-8">
          <span>{formatDate(currentDate.toISOString())}</span>
        </div>

        <p className="text-gray-300">
          This is a video from the War Room collection.
        </p>
      </div>
    </div>
  )
}

2. NEXT.JS CONFIGURATIONS
------------------------
File: next.config.base.js
------------------------
/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  swcMinify: true,
  images: {
    domains: ['rumble.com'],
  },
  // Shared environment variables
  env: {
    NEXT_PUBLIC_SITE_URL: process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000',
  },
}

module.exports = nextConfig

File: next.config.local.js
-------------------------
const baseConfig = require('./next.config.base')

/** @type {import('next').NextConfig} */
const nextConfig = {
  ...baseConfig,
  // Development-specific settings
  output: 'standalone',
  // Enable development features
  webpack: (config, { dev, isServer }) => {
    // Add development-specific webpack configurations here
    return config
  },
}

module.exports = nextConfig

File: next.config.github.js
--------------------------
const baseConfig = require('./next.config.base')

/** @type {import('next').NextConfig} */
const nextConfig = {
  ...baseConfig,
  // GitHub Pages specific settings
  output: 'export',
  basePath: '/natalie-winters-live',
  trailingSlash: true,
  images: {
    ...baseConfig.images,
    unoptimized: true, // Required for static export
  },
  // Disable server-side features
  experimental: {
    appDir: true,
  },
}

module.exports = nextConfig

File: next.config.cloudflare.js
------------------------------
const baseConfig = require('./next.config.base')

/** @type {import('next').NextConfig} */
const nextConfig = {
  ...baseConfig,
  // Cloudflare specific settings
  output: 'standalone',
  // Enable Cloudflare-specific optimizations
  experimental: {
    appDir: true,
    serverActions: true,
  },
  // Optimize for Cloudflare's edge network
  images: {
    ...baseConfig.images,
    formats: ['image/avif', 'image/webp'],
    minimumCacheTTL: 60,
  },
}

module.exports = nextConfig

3. PACKAGE.JSON
--------------
{
  "name": "natalie-winters-live",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "cp next.config.local.js next.config.js && next dev",
    "build:local": "cp next.config.local.js next.config.js && next build",
    "build:github": "cp next.config.github.js next.config.js && next build && next export",
    "build:cloudflare": "cp next.config.cloudflare.js next.config.js && next build",
    "start": "next start",
    "lint": "next lint",
    "scrape": "ts-node scripts/scrape-videos.ts",
    "build:production": "cp .env.production .env && cp next.config.cloudflare.js next.config.js && next build",
    "build:development": "cp .env.development .env && cp next.config.development.js next.config.js && next build",
    "export": "next export",
    "deploy:github": "npm run build:github && touch out/.nojekyll && cp -r out/* .git/gh-pages/",
    "deploy:cloudflare": "npm run build:production && wrangler pages deploy out"
  },
  "dependencies": {
    "@headlessui/react": "^2.2.0",
    "@heroicons/react": "^2.2.0",
    "axios": "^1.8.3",
    "framer-motion": "^12.5.0",
    "next": "15.2.2",
    "react": "^19.0.0",
    "react-dom": "^19.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@tailwindcss/postcss": "^4",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "15.2.2",
    "tailwindcss": "^4",
    "typescript": "^5"
  }
}

4. GITHUB ACTIONS WORKFLOW
-------------------------
File: .github/workflows/deploy.yml
--------------------------------
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build with Next.js
        run: npm run build:github

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './out'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

5. ENVIRONMENT CONFIGURATIONS
---------------------------
File: .env.development
---------------------
NEXT_PUBLIC_SITE_URL=http://localhost:3000

File: .env.production
--------------------
NEXT_PUBLIC_SITE_URL=https://natalie-winters-live.pages.dev

File: .env.github
----------------
NEXT_PUBLIC_SITE_URL=https://meeeeeooooowwwwwww.github.io/natalie-winters-live

NOTES:
------
1. The project uses three different Next.js configurations:
   - Local development (next.config.local.js)
   - GitHub Pages (next.config.github.js)
   - Cloudflare Pages (next.config.cloudflare.js)

2. Each environment has its own:
   - Next.js configuration
   - Environment variables
   - Build and deployment scripts

3. The video page component has been simplified to:
   - Remove client-side data fetching
   - Use direct components
   - Support static generation

4. The GitHub Actions workflow:
   - Triggers on push to main branch
   - Uses Node.js 20
   - Builds with GitHub Pages configuration
   - Deploys to GitHub Pages

5. Dependencies are managed through package.json with specific versions for:
   - Next.js 15.2.2
   - React 19
   - TypeScript 5
   - Various UI libraries and tools 